<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/aop  
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- 自动扫描controller包下的所有类，使其认为spring mvc的控制器 -->
	<!-- 加载controller的时候,不加载service,因为此时事物并未生效,若此时加载了service,那么事物无法对service进行拦截 -->
	<!-- <context:component-scan base-package="jeecg.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	<context:component-scan base-package="com.*">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan> -->
	
	<!-- <context:component-scan base-package="com.base.config.*" /> -->
	
	<context:property-placeholder ignore-unresolvable="true" 
		location="classpath:properties/dev.properties,classpath:properties/dev_wechat.properties,classpath:properties/dev_ucf.properties" />


	
	<!-- 使用annotation 自动注册bean, 并保证@Required、@Autowired的属性被注入 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />      
	<context:annotation-config />
	
	
	
	
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">  
        <property name="converters">  
            <list>  
                <bean class="org.jeecgframework.core.interceptors.DateConverter" />  
            </list>  
        </property>  
    </bean>
	<mvc:annotation-driven conversion-service="conversionService">
		<mvc:message-converters>
			<bean id="byteArrayHttpMessageConverter" class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
			<bean id="stringHttpMessageConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="utf-8" />
			</bean>
			<bean id="sourceHttpMessageConverter" class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
			<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
		<mvc:argument-resolvers>
			<bean class="com.wm.util.spring.json.JsonParamResolver"></bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<!-- 默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
	<bean id="defaultViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:order="3">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="contentType" value="text/html" />
		<property name="prefix" value="/WEB-INF/webpage/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:defaultEncoding="UTF-8">
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
	<!-- 方言 -->
	<bean id="dialect"
		class="org.jeecgframework.core.common.hibernate.dialect.DialectFactoryBean">
		<property name="dbType" value="${jdbc.dbType}" />
	</bean>
	<!-- 异常处理类 -->
	<bean id="exceptionHandler"
		class="org.jeecgframework.core.common.exception.MyExceptionHandler" />
	<!-- 系统错误转发配置[并记录错误日志] -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="500"></property>   <!-- 默认为500，系统错误(error.jsp) -->
		<property name="defaultStatusCode" value="404"></property>
		<property name="statusCodes"><!-- 配置多个statusCode -->
			<props>
				<prop key="error">500</prop>  <!-- error.jsp -->
				<prop key="error1">404</prop>    <!-- error1.jsp -->
			</props>
		</property>
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="java.sql.SQLException">dbError</prop> <!-- 数据库错误(dbError.jsp) -->
				<prop key="org.springframework.web.bind.ServletRequestBindingException">bizError</prop> <!-- 参数绑定错误(如：必须参数没传递)(bizError.jsp) -->
				<prop key="java.lang.IllegalArgumentException">bizError</prop>  <!-- 参数错误(bizError.jsp) -->
				<prop key="org.springframework.validation.BindException">bizError</prop>  <!-- 参数类型有误(bizError.jsp) -->
				<prop key="java.lang.Exception">unknowError</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>
</beans>