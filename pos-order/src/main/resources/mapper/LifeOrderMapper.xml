<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianba.pos.order.mapper.LifeOrderMapper">
    <!-- 查询使用商米pos每个月的盈利金额-->
    <select id="queryOrderList" resultType="java.util.HashMap">
      SELECT
        sum(om.price-os.stock_price) sum_money,
        ca.create_time create_time
      FROM  `order` o
        INNER JOIN merchant m  ON o.merchant_id=m.id
        JOIN user us ON us.id=m.user_id
        JOIN `0085_cashier` ca on ca.merchant_id=m.id
        INNER JOIN order_menu om on om.order_id =o.id
        INNER JOIN  menu me on me.id=om.menu_id
        INNER JOIN `0085_stock` AS os ON os.menu_id=me.id
       WHERE m.id=#{id} AND o.state='confirm' AND  ca.create_time BETWEEN   #{create_time} AND #{nowTime}
    </select>

    <!--获取商家使用pos机的时间-->
    <select id="getPosStrtTimeByMerchant" resultType="java.lang.Long">
        SELECT cas.create_time
        FROM 0085_cashier cas
        JOIN merchant me on cas.merchant_id=me.id
        WHERE me.id=#{id} ORDER BY cas.create_time limit 1
    </select>

    <!--&lt;!&ndash;查詢商家每天的盈利數據&ndash;&gt;-->
    <!--<select id="selectPosProfitByDay" resultType="com.dianba.pos.order.vo.posProfitDto">-->
    <!--SELECT o.id,-->
    <!--sum( om.price) sale_price，-->
    <!--sum(os.stock_price) stock_price,-->
    <!--om.price-os.stock_price order_profit,-->
    <!--us.id user_id user_id,-->
    <!--us.mobile user_mobile,-->
    <!--ca.name user_name,-->
    <!--FROM_UNIXTIME( o.complete_time,'%Y-%m-%d') ,-->
    <!--ca.id_card id_card,-->
    <!--us.first_order_time firest_time,-->
    <!--ca.create_time-->
    <!--FROM  `order` o-->
    <!--INNER JOIN merchant m  ON o.merchant_id=m.id-->
    <!--JOIN user us ON us.id=m.user_id-->
    <!--JOIN `0085_cashier` ca on ca.merchant_id=m.id-->
    <!--INNER JOIN order_menu om on om.order_id =o.id-->
    <!--INNER JOIN  menu me on me.id=om.menu_id-->
    <!--INNER JOIN `0085_stock` AS os ON os.menu_id=me.id-->
    <!--WHERE m.id=#merchant_id# AND o.state ='confirm'  GROUP BY  FROM_UNIXTIME( o.complete_time,'%Y-%m-%d')-->
    <!--</select>-->

    <!--查询是否是pos机商家用户-->
    <select id="verifyMerchantUser" resultType="java.util.HashMap">
        SELECT count(1) num
        ,ca.merchant_id merchant_id
        ,us.id user_id
        FROM `0085_cashier` ca
        JOIN merchant me on ca.merchant_id=me.id
        JOIN user us on us.id=me.user_id
        where ca.name=#{user_name} AND me.id=#{merchantId} AND ca.mobile=#{phone}
    </select>


    <!--获取商家注册时间-->
    <select id="getMerchantCreate" resultType="java.lang.Long">
        SELECT me.create_time FROM merchant me WHERE id=#{id}
    </select>

    <select id="getRemarkCount" parameterType="java.util.List" resultType="java.lang.Integer">
        select count(1) from `order` where remark in
        <foreach collection="remarks" item="remark" open="(" close=")" separator=",">
            #{remark}
        </foreach>
    </select>
    <!--获取增值服务平台订单支付成功,未请求第三方服务type：3话费充值4流量充值-->
    <select id="getOrderListBy19EMenu" resultType="com.dianba.pos.order.vo.Order19EDto">
          SELECT
             o.id orderId,
             o.pay_id orderNum,
             m.price price,
             m.name menuName,
             o.mobile mobile,
             o.pay_state payState,
             m.is_flash type,
             m.menu_key menuKey
          FROM `order` o
          JOIN order_menu om on om.order_id=o.id
          JOIN  menu m on m.id=om.menu_id
          WHERE m.merchant_id=#{merchantId}
          AND o.pay_state=#{payState} and o.charge_state in ('undefined','error')
          and m.is_flash=#{type}
    </select>
    <!--根据商家订单号更新原订单信息-->
    <update id="editOrderInfoBy19e" parameterType="java.util.Map">
        UPDATE `order` o
        SET o.complete_time=#{completeTime}
        ,o.charge_state=#{chargeState}
        WHERE o.id =(SELECT orderId FROM charge_19e WHERE merchantOrderId=#{orderNum})
    </update>
    <!--查询此订单号是否被更新过了-->
    <select id="getByPayId" resultType="java.lang.Object">
        SELECT charge_state FROM `order`  WHERE id =(SELECT orderId FROM charge_19e WHERE merchantOrderId=#{orderNum})
    </select>

    <!--2.0分界线-->
    <!--2.0分界线-->
    <!--2.0分界线-->
    <resultMap id="BaseResultMap" type="com.xlibao.metadata.order.OrderEntry">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="sequence_number" jdbcType="VARCHAR" property="sequenceNumber"/>
        <result column="order_sequence_number" jdbcType="VARCHAR" property="orderSequenceNumber"/>
        <result column="partner_id" jdbcType="VARCHAR" property="partnerId"/>
        <result column="partner_user_id" jdbcType="VARCHAR" property="partnerUserId"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="deliver_status" jdbcType="INTEGER" property="deliverStatus"/>
        <result column="refund_status" jdbcType="INTEGER" property="refundStatus"/>
        <result column="payment_type" jdbcType="TINYINT" property="paymentType"/>
        <result column="trans_type" jdbcType="VARCHAR" property="transType"/>
        <result column="user_source" jdbcType="INTEGER" property="userSource"/>
        <result column="day_sort_number" jdbcType="INTEGER" property="daySortNumber"/>
        <result column="push_type" jdbcType="INTEGER" property="pushType"/>
        <result column="shipping_passport_id" jdbcType="BIGINT" property="shippingPassportId"/>
        <result column="shipping_nick_name" jdbcType="VARCHAR" property="shippingNickName"/>
        <result column="shipping_province" jdbcType="VARCHAR" property="shippingProvince"/>
        <result column="shipping_city" jdbcType="VARCHAR" property="shippingCity"/>
        <result column="shipping_district" jdbcType="VARCHAR" property="shippingDistrict"/>
        <result column="shipping_address" jdbcType="VARCHAR" property="shippingAddress"/>
        <result column="shipping_location" jdbcType="VARCHAR" property="shippingLocation"/>
        <result column="shipping_phone" jdbcType="VARCHAR" property="shippingPhone"/>
        <result column="receipt_user_id" jdbcType="VARCHAR" property="receiptUserId"/>
        <result column="receipt_nick_name" jdbcType="VARCHAR" property="receiptNickName"/>
        <result column="receipt_province" jdbcType="VARCHAR" property="receiptProvince"/>
        <result column="receipt_city" jdbcType="VARCHAR" property="receiptCity"/>
        <result column="receipt_district" jdbcType="VARCHAR" property="receiptDistrict"/>
        <result column="receipt_address" jdbcType="VARCHAR" property="receiptAddress"/>
        <result column="receipt_phone" jdbcType="VARCHAR" property="receiptPhone"/>
        <result column="receipt_location" jdbcType="VARCHAR" property="receiptLocation"/>
        <result column="courier_passport_id" jdbcType="BIGINT" property="courierPassportId"/>
        <result column="courier_nick_name" jdbcType="VARCHAR" property="courierNickName"/>
        <result column="courier_phone" jdbcType="VARCHAR" property="courierPhone"/>
        <result column="total_distance" jdbcType="BIGINT" property="totalDistance"/>
        <result column="current_location" jdbcType="VARCHAR" property="currentLocation"/>
        <result column="collecting_fees" jdbcType="TINYINT" property="collectingFees"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="actual_price" jdbcType="BIGINT" property="actualPrice"/>
        <result column="total_price" jdbcType="BIGINT" property="totalPrice"/>
        <result column="discount_price" jdbcType="BIGINT" property="discountPrice"/>
        <result column="distribution_fee" jdbcType="BIGINT" property="distributionFee"/>
        <result column="price_logger" jdbcType="VARCHAR" property="priceLogger"/>
        <result column="cancel_logger" jdbcType="VARCHAR" property="cancelLogger"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="payment_time" jdbcType="TIMESTAMP" property="paymentTime"/>
        <result column="confirm_time" jdbcType="TIMESTAMP" property="confirmTime"/>
        <result column="body" jdbcType="VARCHAR" property="body"/>
        <result column="detail" jdbcType="VARCHAR" property="detail"/>
        <collection property="itemSnapshots" ofType="com.xlibao.metadata.order.OrderItemSnapshot">
            <id column="id" jdbcType="BIGINT" property="id"/>
            <result column="order_id" jdbcType="BIGINT" property="orderId"/>
            <result column="user_mark" jdbcType="VARCHAR" property="userMark"/>
            <result column="item_id" jdbcType="BIGINT" property="itemId"/>
            <result column="item_template_id" jdbcType="BIGINT" property="itemTemplateId"/>
            <result column="item_name" jdbcType="VARCHAR" property="itemName"/>
            <result column="item_type_id" jdbcType="BIGINT" property="itemTypeId"/>
            <result column="item_type_name" jdbcType="VARCHAR" property="itemTypeName"/>
            <result column="item_unit_id" jdbcType="BIGINT" property="itemUnitId"/>
            <result column="item_unit_name" jdbcType="VARCHAR" property="itemUnitName"/>
            <result column="item_barcode" jdbcType="VARCHAR" property="itemBarcode"/>
            <result column="item_code" jdbcType="VARCHAR" property="itemCode"/>
            <result column="item_batches" jdbcType="INTEGER" property="itemBatches"/>
            <result column="introduction_page" jdbcType="VARCHAR" property="introductionPage"/>
            <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
            <result column="normal_quantity" jdbcType="INTEGER" property="normalQuantity"/>
            <result column="discount_quantity" jdbcType="INTEGER" property="discountQuantity"/>
            <result column="shipment_quantity" jdbcType="INTEGER" property="shipmentQuantity"/>
            <result column="distribution_quantity" jdbcType="INTEGER" property="distributionQuantity"/>
            <result column="receipt_quantity" jdbcType="INTEGER" property="receiptQuantity"/>
            <result column="return_quantity" jdbcType="INTEGER" property="returnQuantity"/>
            <result column="normal_price" jdbcType="BIGINT" property="normalPrice"/>
            <result column="discount_price" jdbcType="BIGINT" property="discountPrice"/>
            <result column="cost_price" jdbcType="BIGINT" property="costPrice"/>
            <result column="market_price" jdbcType="BIGINT" property="marketPrice"/>
            <result column="total_price" jdbcType="BIGINT" property="totalPrice"/>
            <result column="return_price" jdbcType="BIGINT" property="returnPrice"/>
        </collection>
    </resultMap>

    <resultMap id="merchantOrderResultMap" type="com.dianba.pos.order.vo.MerchantOrderVo">
        <result column="show_name" property="showName"/>
        <result column="sequence_number" property="sequenceNumber"/>
        <result column="create_time" property="createTime"/>
        <result column="total_price" property="totalPrice"/>
        <result column="status" property="status"/>
        <collection property="itemSnapshots" ofType="com.dianba.pos.order.vo.MerchantOrderItemSnapshotVo">
            <result column="item_name" property="itemName"/>
            <result column="normal_quantity" property="normalQuantity"/>
            <result column="normal_price" property="normalPrice"/>
        </collection>
    </resultMap>

    <select id="findOrderForMerchant" resultMap="merchantOrderResultMap">
        select p.show_name,o.sequence_number,concat(o.create_time,'') create_time
          ,item_snapshot.item_name,item_snapshot.normal_quantity,item_snapshot.normal_price
          ,o.total_price,o.status
        from life_order.order_entry o
        inner join life_passport.passport p on p.id=o.shipping_passport_id
        inner join life_order.order_item_snapshot item_snapshot on item_snapshot.order_id=o.id
        where o.shipping_passport_id=#{merchantPassportId} and o.status =8
        order by o.create_time desc
    </select>


    <select id="findOrderForPos" resultMap="BaseResultMap">
        select * from life_order.order_entry o
        inner join life_order.order_item_snapshot item_snapshot on item_snapshot.order_id=o.id
        where o.partner_user_id=#{passportId} and o.type=#{orderType} and o.status=#{orderStatus}
    </select>


    <!--商家pos 机每月营业额o e.type 3-采购 7-pos营业订单 -->
    <select id="findPosProfitMoney" resultType="java.util.HashMap">
        SELECT sum(ois.total_price-ois.cost_price) sumMoney
           FROM life_order.order_entry oe
           inner JOIN life_passport.passport pt on pt.id=oe.partner_user_id
           INNER JOIN life_order.order_item_snapshot ois on ois.order_id=oe.id
           WHERE pt.id=#{id} AND oe.type=4 AND oe.status > 8
           AND oe.payment_time BETWEEN #{startTime}  AND #{endTime}
    </select>

    <!--商家pos 机每月营业额o e.type 3-采购 7-pos营业订单 -->
    <select id="findMerchantStockMoney" resultType="java.util.HashMap">
        SELECT sum(ois.total_price-ois.cost_price) sumMoney
        ,count(1) count
        FROM life_order.order_entry oe
        inner JOIN life_passport.passport pt on pt.id=oe.partner_user_id
        INNER JOIN life_order.order_item_snapshot ois on ois.order_id=oe.id
        WHERE pt.id=#{id} AND oe.type=3 AND oe.status in(8,256)
        AND oe.payment_time BETWEEN #{startTime}  AND #{endTime}
    </select>

    <select id="findSettlementOrder4Today" resultMap="BaseResultMap">
        select * from life_order.order_entry o
        inner join life_order.order_item_snapshot item_snapshot on item_snapshot.order_id=o.id
        where o.partner_user_id=#{passportId} and o.type=8 and o.status in(1,8)
        and date_format(o.create_time,'%Y-%m-%d')=date_format(now(),'%Y-%m-%d')
    </select>

    <!--商家商品每日销售报表-->
    <select id="findMerchantDayReport" resultType="com.dianba.pos.order.vo.MerchantDayReportVo">
        SELECT pi.id piId
        ,pi.item_name itemName
        ,ois.item_template_id itemTemplateId
        ,it.id itId,it.title itTitle
        ,count(1) sumCount
        ,sum(ois.cost_price) sumCostMoney
        ,sum(ois.total_price) sumTotalMoney
        FROM life_order.order_entry oe
        inner JOIN life_passport.passport pt on pt.id=oe.partner_user_id
        INNER JOIN life_order.order_item_snapshot ois on ois.order_id=oe.id
        INNER JOIN life_pos.pos_item pi on pi.item_template_id=ois.item_template_id
        INNER JOIN life_item.item_type it on it.id=pi.item_type_id
        WHERE pt.id=#{merchantId} AND oe.type=4 AND oe.status =8 and to_days(oe.create_time)= to_days(now())
        <if test="itId !=null"> AND it.id=#{itId}</if>
        <if test="itemName !=null"> AND pi.item_name like CONCAT('%', #{itemName}, '%')</if>
        GROUP BY ois.item_template_id ORDER BY sumCount desc;
    </select>
</mapper>